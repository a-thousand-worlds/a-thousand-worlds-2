@charset "utf-8";
@use "sass:map";

@import "./mixins.scss";
@import "./vars.scss";

// Import only what you need from Bulma
@import "bulma/sass/utilities/_all.sass";
@import "bulma/sass/base/_all.sass";
@import "bulma/sass/elements/_all.sass";
@import "bulma/sass/form/_all.sass";
@import "bulma/sass/components/_all.sass";
@import "bulma/sass/grid/_all.sass";
@import "bulma/sass/helpers/_all.sass";
@import "bulma/sass/layout/_all.sass";

// extend bulma spacing
// https://github.com/jgthms/bulma/blob/master/sass/helpers/spacing.sass
$spacing-values: map.merge($spacing-values, (
  // rem
  "7": 7rem,
  "8": 8rem,
  "9": 9rem,
  // px
  "10": 10px,
  "20": 20px,
  "30": 30px,
  "40": 40px,
  "50": 50px,
  "60": 60px,
  "70": 70px,
  "80": 80px,
  "90": 90px,
  "100": 100px,
));
@import "bulma/sass/helpers/spacing.sass";

// Bulma has is-hidden-* classes that hide elements after a breakpoint, but does not seem to have classes that hide elements up to a breakpoint
$devices: (
  tablet: $tablet,
  desktop: $desktop,
  widescreen: $widescreen,
  fullhd: $fullhd,
);

@each $key,$value in $devices {
  @include until($value) {
    .from-#{$key} {
      display: none;
    }
  }
}

hr {
  background-color: $primary;
  height: 1px;
  width: 100%;
}

// override bulma title
.title, .title:not(:last-child) {
  font-size: 50px;
  margin-bottom: 10px;
}

button:not([disabled]) {
  cursor: pointer;
}

h1 {
  font-size: 50px;
  font-weight: bold;
  margin-bottom: 10px;
}

h2 {
  font-size: 30px;
  font-weight: bold;
  margin-bottom: 10px;
}

h3 {
  font-size: 24px;
  font-weight: bold;
}

// flat buttons looks like links and don't extend bulma button sizes
// is-link already exists at bulma for buttons
button.is-flat {
  background: none;
  border: none;
  &:not([disabled]) {
    cursor: pointer;
  }
}

button.is-selected {
  background-color: $primary;
  color: $primary-invert;
  &:hover, &:active, &:focus {
    color: $primary-invert;
  }
}

.is-underlined {
  text-decoration: underline;
}

.button {
  border: solid 1px black;
  text-transform: uppercase;

  &.is-secondary {
    background-color: $secondary;
    font-weight: bold;
  }
}

.error {
  color: red;
}

.ck.oneline {
  margin-top: -0.5rem;

  p {
    margin-top: 0.5rem !important;
    margin-bottom: 0.5rem !important;
  }
}

.divider-bottom {
  padding-bottom: 0.5rem;
  margin-bottom: 1.5rem;
  border-bottom: solid 1px $primary;
}

.divider-30 {
  padding-bottom: 30px;
  margin-bottom: 30px;
  border-bottom: solid 1px $primary;
}

a.is-primary { color: $primary }
a.is-secondary{ color: $secondary }
.fill-primary { fill: $primary; }
.fill-secondary { fill: $secondary; }
.stroke-primary { stroke: $primary; }
.stroke-secondary { stroke: $secondary; }
.bg-primary { background-color: $primary; }
.bg-secondary { background-color: $secondary; }
.is-secondary-text { color: $secondary; }

// event smaller than is-small. Useful for tags.
.button.is-mini {
  font-size: 0.75rem;
  padding: 0 0.5rem;
  height: auto;
}
